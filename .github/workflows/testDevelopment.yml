name: dockerDev

on:
  pull_request:
    branches:
      - development
  push:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: compose Docker image
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: docker compose up --build

     # - name: Build Docker image
     #   run: docker build -t dockerdevops --build-arg POSTMAN_API_KEY=${{ secrets.POSTMAN_API_KEY }} .
  
      - name: Run pytest
        run: |
          pytest

      - name: Check pytest result
        if: always()  # This ensures the step runs even if previous steps fail
        run: exit $(test -f pytest-failed && cat pytest-failed || echo 0)
  
  automated-api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/postman/collections/Integration testing.json" -e "31825705-5c92ebea-bf3d-4957-95d0-b33de5500d62" --integration-id "155895-${{ github.run_id }}"